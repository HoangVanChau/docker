FROM --platform=linux/amd64 webdevops/php-nginx-dev:8.1

RUN apt-get update && apt-get install -y \
    libatk-bridge2.0-0 \
    libnss3 \
    libxss1 \
    libasound2 \
    libgtk-3-0

RUN apt-get update && apt-get install -y \
    libx11-xcb1 \
    libasound2 \
    gconf2 \
    libdrm2 \
    libice6 \
    libsm6 \
    libgbm-dev

RUN apt-get install -qq -y curl gnupg && \
            echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/20.04/prod focal main" > /etc/apt/sources.list.d/mssql.list && \
            curl -sS https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
            apt-get update -qq && \
            ACCEPT_EULA=Y apt-get install -qq -y \
                # To keep
                mssql-tools unixodbc-dev

RUN pecl install sqlsrv pdo_sqlsrv \
    && docker-php-ext-enable sqlsrv pdo_sqlsrv && docker-php-ext-enable xdebug

# Install NodeJs
RUN curl -sL https://deb.nodesource.com/setup_18.x| bash -
RUN apt-get install -y nodejs

RUN npm install -g npm
RUN npm install -g yarn


RUN wget -O "/usr/local/bin/go-replace" "https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-arm64-linux" \
   && chmod +x "/usr/local/bin/go-replace" \
   && "/usr/local/bin/go-replace" --version

# Install OpenSSH and set the password for root to "Docker!". In this example, "apk add" is the install instruction for an Alpine Linux-based image.
RUN apt-install openssh-server \
     && echo "root:Docker!" | chpasswd

# Copy the sshd_config file to the /etc/ssh/ directory
# COPY docker/sshd_config /etc/ssh/
RUN curl -LO https://github.com/DataDog/dd-trace-php/releases/latest/download/datadog-setup.php
RUN php datadog-setup.php --php-bin=all --enable-profiling && rm datadog-setup.php

COPY --chown=application:application  . /app
WORKDIR /app
USER application

EXPOSE 80 443 2222 9000 9003
