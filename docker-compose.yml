version: "3.7"
services:
  #PHP 8.2 Service
  php82:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile82
    image: php8.2
    container_name: php82
    user: root
    environment:
      - WEB_ALIAS_DOMAIN=local.com
      - WEB_DOCUMENT_ROOT=/app/fss/magi-front/public
      - PHP_DATE_TIMEZONE=UTC
      - PHP_DISPLAY_ERRORS=1
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=180000
      - PHP_POST_MAX_SIZE=500M
      - PHP_UPLOAD_MAX_FILESIZE=1024M
      - PHP_DEBUGGER=1
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_PORT=9000
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_DISCOVER_CLIENT_HOST=1
      - XDEBUG_START_WITH_REQUEST=1
      - XDEBUG_REMOTE_AUTOSTART=1
      - XDEBUG_PROFILER_ENABLE=1
      - XDEBUG_PROFILER_ENABLE_TRIGGER=1
      - XDEBUG_IDE_KEY=PHPSTORM
      - NEW_RELIC_LICENSE_KEY=369c54b44ea9d0cfd226dc4d134b624bFFFFNRAL
      - NEW_RELIC_APPNAME=local
    volumes:
      - ../:/app:cached
      - ./config/nginx/:/opt/docker/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
      - "5173:5173"
      - "3000:3000"
    networks:
      - app-network
  #PHP 8.1 Service
  php81:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile81
    image: php8.1
    container_name: php81
    user: root
    environment:
      - WEB_ALIAS_DOMAIN=local.com
      - WEB_DOCUMENT_ROOT=/app/fss/magi-front/public
      - PHP_DATE_TIMEZONE=UTC
      - PHP_DISPLAY_ERRORS=1
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=180000
      - PHP_POST_MAX_SIZE=500M
      - PHP_UPLOAD_MAX_FILESIZE=1024M
      - PHP_DEBUGGER=1
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_PORT=9000
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_DISCOVER_CLIENT_HOST=1
      - XDEBUG_START_WITH_REQUEST=1
      - XDEBUG_REMOTE_AUTOSTART=1
      - XDEBUG_PROFILER_ENABLE=1
      - XDEBUG_PROFILER_ENABLE_TRIGGER=1
      - XDEBUG_IDE_KEY=PHPSTORM
      - NEW_RELIC_LICENSE_KEY=369c54b44ea9d0cfd226dc4d134b624bFFFFNRAL
      - NEW_RELIC_APPNAME=local
    volumes:
      - ../:/app:cached
      - ./config/nginx/:/opt/docker/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
      - "5173:5173"
      - "3000:3000"
    networks:
      - app-network

  #PHP 8.0 Service
  php80:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile80
    image: php8.0
    container_name: php80
    user: root
    environment:
      - WEB_ALIAS_DOMAIN=local.crm.vn
      - WEB_DOCUMENT_ROOT=/app
      - PHP_DATE_TIMEZONE=UTC
      - PHP_DISPLAY_ERRORS=1
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=180000
      - PHP_POST_MAX_SIZE=500M
      - PHP_UPLOAD_MAX_FILESIZE=1024M
    volumes:
      - ../:/app:cached
      - ./config/nginx/:/opt/docker/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  #PHP 7.4 Service
  php74:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile74
    image: php7.4
    container_name: php74
    user: root
    environment:
      - WEB_ALIAS_DOMAIN=local.crm.vn
      - WEB_DOCUMENT_ROOT=/app
      - PHP_DATE_TIMEZONE=UTC
      - PHP_DISPLAY_ERRORS=1
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=180000
      - PHP_POST_MAX_SIZE=500M
      - PHP_UPLOAD_MAX_FILESIZE=1024M
      - PHP_DEBUGGER=1
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_PORT=9003
      - XDEBUG_DISCOVER_CLIENT_HOST=1
      - XDEBUG_START_WITH_REQUEST=1
      - XDEBUG_REMOTE_AUTOSTART=1
      - XDEBUG_IDE_KEY=PHPSTORM
    volumes:
      - ../:/app:cached
      - ./config/nginx/:/opt/docker/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8000:8000"
    networks:
      - app-network

  #PHP 7.3 Service
  php73:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile73
    image: php7.3
    container_name: php73
    user: root
    environment:
      - WEB_ALIAS_DOMAIN=local.crm.vn
      - WEB_DOCUMENT_ROOT=/app
      - PHP_DATE_TIMEZONE=UTC
      - PHP_DISPLAY_ERRORS=1
      - PHP_MEMORY_LIMIT=2048M
      - PHP_MAX_EXECUTION_TIME=180000
      - PHP_POST_MAX_SIZE=500M
      - PHP_UPLOAD_MAX_FILESIZE=1024M
      - PHP_DEBUGGER=1
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_PORT=9003
      - XDEBUG_DISCOVER_CLIENT_HOST=1
      - XDEBUG_START_WITH_REQUEST=1
      - XDEBUG_REMOTE_AUTOSTART=1
      - XDEBUG_IDE_KEY=PHPSTORM
    volumes:
      - ../:/app:cached
      - ./config/nginx/:/opt/docker/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-miniostorage}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
    command:
      - server
      - --console-address
      - :9001
      - /data
    networks:
      - app-network
  #MySQL Service
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mariadbdata:/var/lib/mysql/
      - ./reset.sql:/tmp/mysql-init.sql
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:15
    volumes:
      - postgresdata:/var/lib/postgres/
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-root}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
    ports:
      - "5432:5432"
    networks:
      - app-network

  #MSSQL Service
  mssql:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: mssql
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_PASSWORD}
      - ACCEPT_EULA=Y
    volumes:
      - mssqldata:/var/opt/mssql
    ports:
      - "${MSSQL_PORT}:1433"
    networks:
      - app-network

  #Mail Service
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  #Redis Service
  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  #Mongo Service
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "${MONGO_DATABASE_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGO_DATABASE}"
    volumes:
      - mongodata:/data
    networks:
      - app-network

  #Elasticsearch service
  elasticsearch:
    image: elasticsearch:8.4.3
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearchdata:/data
    hostname: elasticsearch
    cpu_shares: 512 # 0.5 CPU
    mem_limit: 536870912 # 512 MB RAM
    environment:
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=password
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - discovery.type=single-node

    networks:
      - app-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.4.3
    # environment:
    #   - ELASTICSEARCH_HOSTS=http://localhost:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - app-network

  #RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    environment:
      - RABBITMQ_USERNAME=root
      - RABBITMQ_PASSWORD=password
    ports:
      - 5672:5672
      - 15672:15672
    #volumes:
    # - rabbitmqdata:/var/lib/rabbitmq
    #- rabbitmqlog:/var/log/rabbitmq
    networks:
      - app-network

  #RabbitMQ Service
  node14:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile14
    image: node14
    container_name: node14
    user: root
    ports:
      - 3300:3300
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  mariadbdata:
    driver: local
  redisdata:
    driver: local
  mongodata:
    driver: local
  elasticsearchdata:
    driver: local
  mssqldata:
    driver: local
  postgresdata:
    driver: local
